# -*- mode: i3wm-config -*-

# Read `man 5 sway` for a complete reference.

# run some background processes
# include /etc/sway/config.d/*
include /home/sean/.config/sway-wallpaper
exec wl-paste -t text --watch clipman store --no-persist

# Variables
# also see ~/.config/fish/conf.d/sway.fish
set $mod Mod4

# Monitor
output DP-5 scale 2
output DP-6 scale 2

# Keyboard
input "type:keyboard" {
    xkb_options caps:swapescape,
    xkb_numlock enabled
}
seat seat0 hide_cursor 5000

# Borders and Gaps
# gaps inner 0
# gaps outer 0
gaps inner 7
gaps outer 7
smart_gaps on
default_border pixel
# default_border none

# Disable all X support... seems to actually work!?!
# xwayland disable

# Swayidle
# exec swayidle -w \
#     timeout 3600 'swaylock -f -c 000000' \
#     timeout 3600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#     before-sleep 'swaylock -f -c 000000'
# from arch wiki
exec swayidle -w \
	timeout 1800 'swaylock -f' \
	timeout 1805 'swaymsg "output * power off"' \
	resume 'swaymsg "output * power on"'

# Swaylock
# see ~/.config/swaylock/config

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    status_command while date +'%a %b %d, %I:%M %p '; do sleep 60; done
    colors {
	# background #323232
	background #181920
	inactive_workspace #32323200 #32323200 #5c5c5c
    }
    # font "Source Code Pro 30"
    font "Fira Code 30"
    mode hide
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
# find somewhere better to put this thing i never use
floating_modifier $mod normal

# Window Rules
for_window {
    [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 5
    [app_id="^code_runner$"] floating enable, sticky enable, resize set 60 ppt 80 ppt, border pixel 5
    [app_id="^search_browser$"] floating enable, sticky enable, resize set 50 ppt 5 ppt, border pixel 3
}

# Launch programs
bindsym {
    $mod+Return exec kitty
    $mod+b exec brave --enable-features=UseOzonePlatform --ozone-platform=wayland
    $mod+v exec code --enable-features=UseOzonePlatform --ozone-platform=wayland
    $mod+f exec MOZ_ENABLE_WAYLAND=1 firefox
    # $mod+Shift+v exec virt-manager --enable-features=UseOzonePlatform --ozone-platform=wayland
    # $mod+e exec emacs
    $mod+e exec emacs --init-directory $HOME/.config/emacs-configs/no-package-manager
    $mod+q exec qutebrowser
    # $mod+Shift+w exec $term --class=search_browser -e ~/scripts/url-launcher.fish
    $mod+Shift+w exec kitty --class=search_browser -e ~/scripts/url-launcher.fish
    # $mod+Shift+x exec $term --class=launcher -e ~/scripts/config-launcher.fish
    $mod+Shift+x exec kitty --class=launcher -e ~/scripts/config-launcher.fish
    $mod+Shift+n exec kitty nvim -c ':Telescope oldfiles'
    # good ideas dont seems okay for nvim
    # $mod+Shift+r exec kitty --detach ranger
    # $mod+Shift+f exec kitty ji
    # $mod+c exec clipman pick -t bemenu
    # $mod+c exec clipman pick --tool wofi -T'--prompt="really need to fix wofi" -i'
    $mod+c exec clipman pick --print0 --tool=CUSTOM --tool-args="fzf --prompt 'pick > ' --bind 'tab:up' --cycle --read0"
    # $mod+d exec kitty --class=launcher -e /usr/bin/sway-launcher-desktop
    $mod+Shift+Return exec bemenu-run --prompt application --list 10 --fn "Fira Code Pro 15"
    # $mod+d exec kitty --class=launcher -e /usr/bin/sway-launcher-desktop
}

# swaynag
# TODO work on this, and while youre at it work on resize as well
set {
    $nag         exec swaynagmode
    $nag_exit    $nag --exit
    $nag_confirm $nag --confirm
    $nag_select  $nag --select
}
mode "nag" {
    bindsym {
	Ctrl+d    mode "default"

	Ctrl+c    $nag_exit
	q         $nag_exit
	Escape    $nag_exit

	Return    $nag_confirm

	Tab       $nag_select prev
	Shift+Tab $nag_select next

	Left      $nag_select next
	Right     $nag_select prev

	Up        $nag_select next
	Down      $nag_select prev
    }
}
bindsym {
    $mod+Shift+e $nag -t "warning" -m "Exit Sway?" -b "Exit" "swaymsg exit" -b "Reload" "swaymsg reload"
}
# -R is recommended for swaynag_command so that, upon a syntax error in your sway config, the
# 'Reload Sway' option will be initially selected instead of the 'Exit Sway' option
swaynag_command $nag -R

# Window actions
bindsym {
    $mod+backspace kill
    $mod+Shift+c reload
    # $mod+Shift+e exec swaynag -t warning -m \
    #     'Do you really want to exit sway?' \
    #     -B 'Yes, exit sway' 'swaymsg exit'
    # $mod+Shift+e exec swaynagmode -t warning -m "Exit Sway?" -b "Exit" \
    #     "swaymsg exit" -b "Reload" "swaymsg reload"
    # $mod+b splith
    # $mod+v splitv
    $mod+s layout stacking
    $mod+w layout tabbed
    # $mod+e layout toggle split
    # $mod+f fullscreen      change to <f11>
    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle
    # Scratchpad
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.
    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}

# Resizing containers
mode "resize" {
    bindsym {
	h resize shrink width 10px
	j resize grow height 10px
	k resize shrink height 10px
	l resize grow width 10px
	Left resize shrink width 10px
	Down resize grow height 10px
	Up resize shrink height 10px
	Right resize grow width 10px
	Return mode "default"
	Escape mode "default"
    }
}
bindsym $mod+r mode "resize"

# Window focus
bindsym {
    $mod+tab workspace back_and_forth
    # Swap focus between the tiling area and the floating area
    # find a better use for this keybinding
    $mod+space focus mode_toggle
    # Move focus to the parent containers
    # find out what this even means
    $mod+a focus parent
    $mod+h focus left
    $mod+j focus down
    $mod+k focus up
    $mod+l focus right
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right
    $mod+Shift+h move left
    $mod+Shift+j move down
    $mod+Shift+k move up
    $mod+Shift+l move right
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right
    # Switch to workspace
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    # $mod+0 workspace number 10
    # $mod+Shift+1 move container to workspace number 1 and move focus to workspace number 1
    $mod+Shift+1 move container to workspace number 1; workspace number 1
    $mod+Shift+2 move container to workspace number 2; workspace number 2
    $mod+Shift+3 move container to workspace number 3; workspace number 3
    $mod+Shift+4 move container to workspace number 4; workspace number 4
    $mod+Shift+5 move container to workspace number 5; workspace number 5
    $mod+Shift+6 move container to workspace number 6; workspace number 6
    $mod+Shift+7 move container to workspace number 7; workspace number 7
    $mod+Shift+8 move container to workspace number 8; workspace number 8
    $mod+Shift+9 move container to workspace number 9; workspace number 9
    # $mod+1 [workspace="1"] move workspace to output current; workspace number 1
    # $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
}
